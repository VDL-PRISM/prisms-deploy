version: "2"
services:
  # Front end
  nginx:
    restart: always
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./certs:/etc/nginx/certs:ro"

  nginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./nginx-config/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  # Generate certificates
  # letsencrypt-nginx-proxy-companion:
  #   restart: always
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   container_name: letsencrypt-nginx-proxy-companion
  #   volumes_from:
  #     - nginx
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #     - "./certs:/etc/nginx/certs:rw"
  #   environment:
  #     - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

  # Applications
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./grafana-storage:/var/lib/grafana
      - ./grafana-provisioning:/etc/grafana/provisioning
    environment:
      GF_SERVER_ROOT_URL: https://grafana.prisms.lundrigan.org
      GF_SECURITY_ADMIN_PASSWORD: secret
      VIRTUAL_HOST: grafana.prisms.lundrigan.org
      VIRTUAL_NETWORK: nginx-proxy
      VIRTUAL_PORT: 3000
    depends_on:
      - influxdb

  sensor_status:
    image: prisms/sensor-status:latest
    container_name: sensor_status
    environment:
      DASH_INFLUX_HOST: ${INFLUX_HOST}
      DASH_INFLUX_USERNAME: reader
      DASH_INFLUX_PASSWORD: password
      DASH_INFLUX_DATABASE: ${INFLUX_DATABASE}
      DASH_MONGO_HOST: ${MONGO_HOST}
      DASH_MONGO_USER: status_reader
      DASH_MONGO_PASSWORD: password
      DASH_MONGO_DATABASE: ${MONGO_DATABASE}
      DASH_SERVER_UPDATE_TIME: 30
      VIRTUAL_HOST: status.prisms.lundrigan.org
      VIRTUAL_NETWORK: nginx-proxy
      VIRTUAL_PORT: 8000
    depends_on:
      - influxdb
      - mongodb

  export_tool:
    image: prisms/export-tool:latest
    container_name: export_tool
    environment:
      ET_BASIC_AUTH_USERNAME: phil
      ET_BASIC_AUTH_PASSWORD: test
      ET_INFLUX_HOST: ${INFLUX_HOST}
      ET_INFLUX_USERNAME: reader
      ET_INFLUX_PASSWORD: password
      ET_INFLUX_DATABASE: ${INFLUX_DATABASE}
      ET_SECRET_KEY: test
      VIRTUAL_HOST: export.prisms.lundrigan.org
      VIRTUAL_NETWORK: nginx-proxy
      VIRTUAL_PORT: 8000
    depends_on:
      - influxdb

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_BASICAUTH_USERNAME: user
      ME_CONFIG_BASICAUTH_PASSWORD: password
      VIRTUAL_HOST: meta.prisms.lundrigan.org
      VIRTUAL_NETWORK: nginx-proxy
      VIRTUAL_PORT: 8081
    depends_on:
      - mongodb

  # Data storage
  influxdb:
    image: influxdb:1.6
    container_name: influxdb
    volumes:
      - ./influxdb-storage:/var/lib/influxdb
      - ./influxdb-provisioning:/docker-entrypoint-initdb.d
    environment:
      INFLUXDB_DB: prisms
      INFLUXDB_HTTP_AUTH_ENABLED: 'true'
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: password
      INFLUXDB_READ_USER: reader
      INFLUXDB_READ_USER_PASSWORD: password
      INFLUXDB_WRITE_USER: writer
      INFLUXDB_WRITE_USER_PASSWORD: password
      VIRTUAL_HOST: db.prisms.lundrigan.org
      VIRTUAL_NETWORK: nginx-proxy
      VIRTUAL_PORT: 8086

  mongodb:
    image: mongo:4.0
    container_name: mongodb
    volumes:
      - ./mongodb-storage:/data/db
      - ./mongodb-provisioning:/docker-entrypoint-initdb.d
    environment:
      MONGO_DATA_DIR: /data/db
      # MONGO_LOG_DIR: /dev/null
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: prisms
    command: --smallfiles # --logpath=/dev/null # --quiet

  # Data aggregation
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - "1883:1883"
      - "8883:8883"
    volumes:
      - ./mosquitto-config:/mosquitto/config
      - ./mosquitto-storage:/mosquitto/data

  ha_subscriber:
    image: prisms/ha_mqtt_subscriber
    container_name: ha_subscriber
    volumes:
      - ./ha_subscriber-storage/:/app/data
    environment:
      HA_SUB_INFLUX_USERNAME: writer
      HA_SUB_INFLUX_PASSWORD: password
      HA_SUB_INFLUX_HOST: ${INFLUX_HOST}
      HA_SUB_INFLUX_DATABASE: ${INFLUX_DATABASE}
      HA_SUB_MQTT_HOST: ${MQTT_HOST}
      HA_SUB_MQTT_USER: prisms_ha_subscriber
      HA_SUB_MQTT_PASSWORD: None
      HA_SUB_MQTT_TOPICS: prisms_ha/#
    depends_on:
      - influxdb
      - mosquitto

  prisms_subscriber:
    image: prisms/prisms_mqtt_subscriber
    container_name: prisms_subscriber
    volumes:
      - ./prisms_subscriber-storage/:/app/data
    environment:
      PRISMS_SUB_INFLUX_USERNAME: writer
      PRISMS_SUB_INFLUX_PASSWORD: password
      PRISMS_SUB_INFLUX_HOST: ${INFLUX_HOST}
      PRISMS_SUB_INFLUX_DATABASE: ${INFLUX_DATABASE}
      PRISMS_SUB_MQTT_HOST: ${MQTT_HOST}
      PRISMS_SUB_MQTT_USER: prisms_subscriber
      PRISMS_SUB_MQTT_PASSWORD: None
      PRISMS_SUB_MQTT_TOPICS: prisms/#
      PRISMS_SUB_MONGO_HOST: ${MONGO_HOST}
      PRISMS_SUB_MONGO_USER: mqtt_reader
      PRISMS_SUB_MONGO_PASSWORD: password
      PRISMS_SUB_MONGO_DATABASE: ${MONGO_DATABASE}
    depends_on:
      - influxdb
      - mongodb
      - mosquitto
